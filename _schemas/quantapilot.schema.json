{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schemas.quantapilot/quantapilot.schema.json",
  "title": "QuantaPilot Configuration Schema",
  "description": "Schema for the optional quantapilot.yml file in a target project.",
  "type": "object",
  "required": ["stack", "models", "budgets", "steps"],
  "properties": {
    "stack": { "type": "object", "additionalProperties": true },
    "models": {
      "type": "object",
      "properties": {
        "arch": { "$ref": "#/$defs/modelCfg" },
        "dev": { "$ref": "#/$defs/modelCfg" },
        "qa": { "$ref": "#/$defs/modelCfg" }
      },
      "additionalProperties": false
    },
    "budgets": {
      "type": "object",
      "properties": {
        "tokens": { "type": "integer", "minimum": 1 },
        "usd": { "type": "number", "minimum": 0 }
      },
      "required": ["tokens"]
    },
    "steps": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/stepCfg" }
    },
    "gates": {
      "type": "object",
      "properties": {
        "docs_lint": { "type": "boolean" },
        "tests_required": { "type": "boolean" }
      },
      "additionalProperties": false
    },
    "rag": {
      "type": "object",
      "properties": {
        "snapshot_id": { "type": "string" },
        "sources": {
          "type": "array",
          "items": { "type": "string", "format": "uri" }
        }
      },
      "additionalProperties": false
    },
    "env_refs": {
      "type": "object",
      "properties": {
        "openai_key": { "type": "string" },
        "github_key": { "type": "string" },
        "db_url": { "type": "string" }
      },
      "additionalProperties": false
    },
    "limits": {
      "type": "object",
      "description": "Resource and budget limits.",
      "properties": {
        "tokens_per_run": {
          "type": "integer",
          "minimum": 0,
          "description": "Maximum number of tokens per run."
        },
        "tokens_per_day": {
          "type": "integer",
          "minimum": 0,
          "description": "Daily token budget."
        },
        "timeout_seconds": {
          "type": "integer",
          "minimum": 0,
          "description": "Global timeout per run in seconds."
        },
        "max_retries": {
          "type": "integer",
          "minimum": 0,
          "description": "Maximum number of retries per step."
        }
      },
      "additionalProperties": false
    },
    "policies": {
      "type": "object",
      "description": "Process policies.",
      "properties": {
        "merge": {
          "type": "string",
          "enum": ["squash", "merge", "rebase"],
          "description": "Preferred merge strategy for PRs."
        },
        "gates": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Additional optional gates to enforce."
        },
        "data_retention_days": {
          "type": "integer",
          "minimum": 0,
          "description": "Days to retain logs and metrics."
        },
        "model_change_requires_gate": {
          "type": "boolean",
          "description": "If true, changing model versions requires a gate."
        }
      },
      "additionalProperties": false
    }
  },
  "$defs": {
    "modelCfg": {
      "type": "object",
      "required": ["model", "temperature", "max_output_tokens"],
      "properties": {
        "model": { "type": "string" },
        "temperature": { "type": "number", "minimum": 0, "maximum": 1 },
        "max_output_tokens": { "type": "integer", "minimum": 1 }
      },
      "additionalProperties": true
    },
    "stepCfg": {
      "type": "object",
      "required": ["name", "timeout_s", "retries", "tokens_budget"],
      "properties": {
        "name": { "enum": ["plan", "impl", "test", "doc", "pr"] },
        "timeout_s": { "type": "integer", "minimum": 1 },
        "retries": { "type": "integer", "minimum": 0 },
        "tokens_budget": { "type": "integer", "minimum": 1 }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": true
}
