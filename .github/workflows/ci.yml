name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20.10.0'
  DOCKER_BUILDKIT: 1

jobs:
  # ==============================================
  # Code Quality & Testing
  # ==============================================
  quality:
    name: Code Quality & Testing
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Check code formatting
        run: npm run format:check
        
      - name: Run unit tests
        run: npm run test:unit
        
      - name: Run integration tests
        run: npm run test:integration
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/quantapilot_test
          
      - name: Validate documentation
        run: npm run docs:lint
        
      - name: Validate Cursor rules
        run: npm run docs:validate-cursor-rules

  # ==============================================
  # Security Scanning
  # ==============================================
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        
      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # ==============================================
  # Docker Build & Test
  # ==============================================
  docker:
    name: Docker Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker images
        run: docker-compose build
        
      - name: Test Docker Compose
        run: |
          docker-compose up -d postgres redis
          sleep 10
          docker-compose down

  # ==============================================
  # Documentation Build
  # ==============================================
  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build documentation
        run: npm run docs:build
        
      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/.vitepress/dist

  # ==============================================
  # Deployment (Main branch only)
  # ==============================================
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [quality, security, docker, docs]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to staging
        run: echo "Deploy to staging environment"
        # TODO: Add actual deployment steps
        # - Configure staging environment
        # - Deploy Docker images
        # - Run database migrations
        # - Health checks
